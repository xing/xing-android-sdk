/*
 * Copyright (ะก) 2016 XING AG (http://xing.com/)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.0'
    }
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
    }

    project.ext {
        /** Contains global constants shared with all modules. */
        versions = [
              androidCompileSdk: 23,
              androidBuildTools: '23.0.3',
              androidMinSdk    : 14,
              androidTargetSdk : 23,

              androidSupportLib: '23.1.0',
              okHttp           : '3.4.1'
        ]

        /** Used dependencies. */
        libraries = [
              // Android
              supportAnnotations      : "com.android.support:support-annotations:$versions.androidSupportLib",
              supportV4               : "com.android.support:support-v4:$versions.androidSupportLib",
              supportAppCompat        : "com.android.support:appcompat-v7:$versions.androidSupportLib",
              supportDesign           : "com.android.support:design:$versions.androidSupportLib",
              supportCardView         : "com.android.support:cardview-v7:$versions.androidSupportLib",
              supportRecyclerView     : "com.android.support:recyclerview-v7:$versions.androidSupportLib",
              android                 : 'com.google.android:android:4.1.1.4',

              // Ok stack
              okhttp                  : "com.squareup.okhttp3:okhttp:$versions.okHttp",
              okhttpLoggingInterceptor: "com.squareup.okhttp3:logging-interceptor:$versions.okHttp",
              okio                    : 'com.squareup.okio:okio:1.11.0',
              moshi                   : 'com.squareup.moshi:moshi:1.2.0',

              // Additional network libraries
              singpost                : 'oauth.signpost:signpost-core:1.2.1.2@jar',
              glide                   : 'com.github.bumptech.glide:glide:3.6.0',

              // ReactiveX
              rxjava                  : 'io.reactivex:rxjava:1.2.0',

              // Test
              junit                   : 'junit:junit:4.12',
              assertj                 : 'org.assertj:assertj-core:1.7.0',
              mockito                 : 'org.mockito:mockito-all:1.10.19',
              robolectric             : 'org.robolectric:robolectric:3.1.2',
              robolectircSupport      : 'org.robolectric:shadows-support-v4:3.1.2',
              mockWebServer           : 'com.squareup.okhttp3:mockwebserver:3.2.0',
              commonsIo               : 'commons-io:commons-io:2.4',
              apacheCommons3          : 'org.apache.commons:commons-lang3:3.4'
        ]
    }
}

subprojects { project ->

    apply plugin: 'checkstyle'

    checkstyle {
        toolVersion '6.0'
    }

    task checkstyle(type: Checkstyle) {
        group 'verification'
        configFile rootProject.file('checkstyle.xml')
        source = ['src/main/java', 'src/test/java']

        ignoreFailures false
        showViolations true
        include '**/*.java'
        exclude '**/R.java'
        exclude '**/BuildConfig.java'

        classpath = files()
        configProperties = [
              'proj.module.dir'      : projectDir.absolutePath,
              'checkstyle.cache.file': './build/cache/checkstyle-cache'
        ]
    }

    afterEvaluate {
        if (project.tasks.findByName('check')) {
            check.dependsOn('checkstyle')
        }
    }

    apply plugin: 'idea'

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }
}
