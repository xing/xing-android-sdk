/*
 * Copyright (c) 2015 XING AG (http://xing.com/)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.1'
        classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.0'
    }
}

apply plugin: 'android-sdk-manager'

allprojects {
    repositories {
        jcenter()
        mavenCentral()

        // TODO Remove this for release.
        maven { // Sonatype snapshot repo.
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }

    project.ext {
        /** Contains global constants shared with all modules */
        versions = [
                COMPILE_SDK_VERSION: 22,
                BUILD_TOOLS_VERSION: '22.0.1',
                MIN_SDK_VERSION    : 14,
                TARGET_SDK_VERSION : 22
        ]

        /** Used dependencies */
        libraries = [
                // Android
                supportAnnotations : 'com.android.support:support-annotations:23.1.0',
                supportV4          : 'com.android.support:support-v4:22.2.0',
                supportAppCompat   : 'com.android.support:appcompat-v7:22.2.0',
                supportDesign      : 'com.android.support:design:22.2.0',
                supportCardView    : 'com.android.support:cardview-v7:22.2.0',
                supportRecyclerView: 'com.android.support:recyclerview-v7:22.2.0',

                // Ok stack
                okhttp             : 'com.squareup.okhttp:okhttp:2.5.0',
                okhttpUrlConnection: 'com.squareup.okhttp:okhttp-urlconnection:2.5.0',
                okio               : 'com.squareup.okio:okio:1.6.0',
                moshi              : 'com.squareup.moshi:moshi:1.1.0-SNAPSHOT',

                // Additional network libraries
                singpost           : 'oauth.signpost:signpost-core:1.2.1.2@jar',
                glide              : 'com.github.bumptech.glide:glide:3.6.0',

                // ReactiveX
                rxjava             : 'io.reactivex:rxjava:1.0.14',

                // Test
                junit              : 'junit:junit:4.12',
                assertj            : 'org.assertj:assertj-core:1.7.0',
                mockito            : 'org.mockito:mockito-all:1.10.19',
                robolectric        : 'org.robolectric:robolectric:3.0',
                mockWebServer      : 'com.squareup.okhttp:mockwebserver:2.5.0',
                commonsIo          : 'commons-io:commons-io:2.4'
        ]
    }
}

subprojects { project ->

    apply plugin: 'checkstyle'

    checkstyle {
        toolVersion '6.0'
    }

    task checkstyle(type: Checkstyle) {
        group 'verification'
        configFile rootProject.file('checkstyle.xml')
        source 'src/main/java'

        ignoreFailures false
        showViolations true
        include '**/*.java'
        exclude '**/R.java'
        exclude '**/BuildConfig.java'

        classpath = files()
        configProperties = [
                'proj.module.dir'      : projectDir.absolutePath,
                'checkstyle.cache.file': './build/cache/checkstyle-cache'
        ]
    }

    afterEvaluate {
        if (project.tasks.findByName('check')) {
            check.dependsOn('checkstyle')
        }
    }

    apply plugin: 'idea'

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }
}
